/*type selector*/
h2{
  color:purple;
}

/* ID Selector */
#welcome-title {
  color: green;
}

/* Class Selector */
.blue{
  color:blue;
}

.red {
  color: red;
}


/* Attribute Selector */

/* 1.[attr] */
a[target] {
  color: hotpink;
}

/* 2.[attr=value] */
a[href="http://example.org"] {
  color: indigo;
}

/* 3.[attr^=value] */
a[href^="http://"] {
  color: red;
}

/* 4.[attr$=value] */
a[href$=".com"] {
  color: silver;
}

/* 5.[attr*=value] */
a[href*="example"]{
  color: sienna;
}

/* Pseudo-Class Selector (가상 클래스 선택자
) */

/* 1.first-child */
li:first-child{
  color: green;
}

.movie:first-child {
  font-size: 42px;
}

/* 2.last-child */
span:last-child{
  color: tomato;
}

/* 3.nth-child */
li:nth-child(3){
  color: hotpink;
}

/* 4.:not() */

input:not([type="password"]) {
  background-color: indianred;
}

/* 5. link, visited */

a:link {
  color: tomato;
}
a:visited {
color: goldenrod;
}

/* 6. hover,active,focus */

input[type=button]{
  background-color: skyblue;
}
input[type=button]:hover{
  background-color: teal;
  color:white
}

input[type=button]:active {
  background-color: red;
}
input[type=button]:focus {
  background-color: blue;
}

input[type=text]:focus {
  background-color: cyan;
}

/* 7. enabled, disabled, :checked */

input[type=text]:enabled{
  background-color: skyblue;
}
input[type=text]:disabled{
  background-color: silver;
}

input[type=radio]:checked {
  outline: skyblue;
}
input[type=checkbox]:checked {
  outline: 3px solid red;
}

/* 가상요소선택자
-->selector::_____(권장)
-->selector:______ */

/* 1.before, after */
.fav::before {
  content: '☆';
}

.movie::after {
  content: '♥';
}

/* 2.first-letter, first-line, selection */

.lorem::first-letter{
color: khaki
font: size 30px;;
}

.lorem::first-line{
  color: blueviolet;
  font-size: 30px;
}

.lorem::selection{
  background-color: coral;
  color: aliceblue;
}

/* 선택자 결합-하위,자식,형제,그룹화 */

/* 1.하위 */
#list li:last-of-type {
  color: red;
}
/* 혹은 ul li:last-of-type {
  color: red;
} */

/* 2.자식 */
#list > li:last-of-type {
  color: blue;
}

/* 3.일반 형제 선택자 결합 (~)*/
code ~ p {
  color: red
}
code ~ .red {
  color: brown;
}

/* 4. 인접 형제 선택자 결합(+) */

span + code {
  color : rosybrown;
}

/* 3. 그룹화 (,)*/

p,span,code {
  color: purple;
}

/* 범용선택자 (*) */

p + * {
  color: white;
}

/* 상속 제어하기 - initial */

.parent {
  color: pink;
  font-size: 7px;
}

/* .child2 {
  all: initial;
} 한번에 속성을 바꿀 때는 all 사용*/


/* 상속 제어하기 - inherit */


.child1 {
  color: red;
}

.parent1, .parent2 {
  color: blue;
}

.parent2 * {
  color: inherit;
}

/* unset
1. 부모로부터 상속받을 값이 있을 때 : inherit
2. 부모로부터 상속받을 값이 없을 때 : initial */

.parent2 .child1 {
  all: unset;
}

